"use strict";(self.webpackChunkshopshop_docs=self.webpackChunkshopshop_docs||[]).push([[66],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>f});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var m=i.createContext({}),p=function(e){var n=i.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=p(e.components);return i.createElement(m.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},c=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,m=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),c=p(t),f=r,u=c["".concat(m,".").concat(f)]||c[f]||d[f]||a;return t?i.createElement(u,o(o({ref:n},l),{},{components:t})):i.createElement(u,o({ref:n},l))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=c;var s={};for(var m in n)hasOwnProperty.call(n,m)&&(s[m]=n[m]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<a;p++)o[p]=t[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}c.displayName="MDXCreateElement"},6747:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var i=t(7462),r=(t(7294),t(3905));const a={sidebar_position:1},o="\u10e1\u10d9\u10e0\u10d8\u10de\u10e2\u10d4\u10d1\u10d8",s={unversionedId:"python-scripts",id:"python-scripts",title:"\u10e1\u10d9\u10e0\u10d8\u10de\u10e2\u10d4\u10d1\u10d8",description:"\u10db\u10dd\u10ea\u10d4\u10db\u10e3\u10da\u10d8 \u10e1\u10d9\u10e0\u10d8\u10de\u10e2\u10d4\u10d1\u10d8\u10e1 \u10d2\u10d0\u10e1\u10d0\u10e8\u10d5\u10d4\u10d1\u10d0\u10d3 \u10e3\u10db\u10ef\u10dd\u10d1\u10d4\u10e1\u10d8\u10d0 \u10d2\u10d0\u10db\u10dd\u10e7\u10d4\u10dc\u10d4\u10d1\u10e3\u10da \u10d8\u10e5\u10dc\u10d4\u10e1",source:"@site/docs/python-scripts.md",sourceDirName:".",slug:"/python-scripts",permalink:"/shopshop-docs/docs/python-scripts",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/python-scripts.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"\u10de\u10e0\u10dd\u10d3\u10e3\u10e5\u10e2\u10d4\u10d1\u10d8",permalink:"/shopshop-docs/docs/products"},next:{title:"\u10d4\u10e5\u10e1\u10d4\u10da\u10d8\u10e1 \u10e4\u10dd\u10e0\u10db\u10d0\u10e2\u10d8",permalink:"/shopshop-docs/docs/excel-format"}},m={},p=[{value:"\u10e4\u10dd\u10e2\u10dd\u10d4\u10d1\u10d8\u10e1 \u10d2\u10d0\u10d9\u10d5\u10d0\u10d3\u10e0\u10d0\u10e2\u10d4\u10d1\u10d0",id:"\u10e4\u10dd\u10e2\u10dd\u10d4\u10d1\u10d8\u10e1-\u10d2\u10d0\u10d9\u10d5\u10d0\u10d3\u10e0\u10d0\u10e2\u10d4\u10d1\u10d0",level:3},{value:"\u10e1\u10d0\u10ee\u10d4\u10da\u10d4\u10d1\u10d8\u10e1 \u10d2\u10d0\u10d3\u10d0\u10e0\u10e5\u10db\u10d4\u10d5\u10d0",id:"\u10e1\u10d0\u10ee\u10d4\u10da\u10d4\u10d1\u10d8\u10e1-\u10d2\u10d0\u10d3\u10d0\u10e0\u10e5\u10db\u10d4\u10d5\u10d0",level:3},{value:"\u10da\u10d8\u10dc\u10d9\u10d4\u10d1\u10d8\u10d3\u10d0\u10dc \u10d2\u10d0\u10d3\u10db\u10dd\u10ec\u10d4\u10e0\u10d0",id:"\u10da\u10d8\u10dc\u10d9\u10d4\u10d1\u10d8\u10d3\u10d0\u10dc-\u10d2\u10d0\u10d3\u10db\u10dd\u10ec\u10d4\u10e0\u10d0",level:3},{value:"\u10e4\u10dd\u10da\u10d3\u10d4\u10e0\u10d4\u10d1\u10d8\u10d3\u10d0\u10dc \u10e4\u10dd\u10e2\u10dd\u10d4\u10d1\u10d8\u10e1 \u10d0\u10db\u10dd\u10e6\u10d4\u10d1\u10d0",id:"\u10e4\u10dd\u10da\u10d3\u10d4\u10e0\u10d4\u10d1\u10d8\u10d3\u10d0\u10dc-\u10e4\u10dd\u10e2\u10dd\u10d4\u10d1\u10d8\u10e1-\u10d0\u10db\u10dd\u10e6\u10d4\u10d1\u10d0",level:3},{value:"\u10e0\u10dd\u10ea\u10d0 \u10e4\u10dd\u10e2\u10dd\u10d4\u10d1\u10e1 \u10d0\u10e0 \u10d0\u10e5\u10d5\u10d7 \u10e1\u10dd\u10e0\u10e2\u10d8 _1",id:"\u10e0\u10dd\u10ea\u10d0-\u10e4\u10dd\u10e2\u10dd\u10d4\u10d1\u10e1-\u10d0\u10e0-\u10d0\u10e5\u10d5\u10d7-\u10e1\u10dd\u10e0\u10e2\u10d8-_1",level:3}],l={toc:p};function d(e){let{components:n,...a}=e;return(0,r.kt)("wrapper",(0,i.Z)({},l,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u10e1\u10d9\u10e0\u10d8\u10de\u10e2\u10d4\u10d1\u10d8"},"\u10e1\u10d9\u10e0\u10d8\u10de\u10e2\u10d4\u10d1\u10d8"),(0,r.kt)("p",null,"\u10db\u10dd\u10ea\u10d4\u10db\u10e3\u10da\u10d8 \u10e1\u10d9\u10e0\u10d8\u10de\u10e2\u10d4\u10d1\u10d8\u10e1 \u10d2\u10d0\u10e1\u10d0\u10e8\u10d5\u10d4\u10d1\u10d0\u10d3 \u10e3\u10db\u10ef\u10dd\u10d1\u10d4\u10e1\u10d8\u10d0 \u10d2\u10d0\u10db\u10dd\u10e7\u10d4\u10dc\u10d4\u10d1\u10e3\u10da \u10d8\u10e5\u10dc\u10d4\u10e1\n",(0,r.kt)("a",{parentName:"p",href:"https://www.anaconda.com/"},"Anaconda"),", \u10db\u10d0\u10e1\u10e8\u10d8 \u10e8\u10d4\u10d3\u10d8\u10e1\n",(0,r.kt)("strong",{parentName:"p"},"jupyter"),", \u10e0\u10dd\u10db\u10d4\u10da\u10d8\u10ea \u10e1\u10d0\u10e8\u10e3\u10d0\u10da\u10d4\u10d1\u10d0\u10e1 \u10d2\u10d5\u10d0\u10eb\u10da\u10d4\u10d5\u10e1 \u10de\u10d8\u10d7\u10dd\u10dc\u10d8\u10e1 \u10e1\u10d9\u10e0\u10d8\u10de\u10e2\u10d4\u10d1\u10d8 \u10d2\u10d0\u10d5\u10e3\u10e8\u10d5\u10d0\u10d7\n\u10d0\u10e0\u10e9\u10d4\u10e3\u10da \u10e4\u10dd\u10da\u10d3\u10d4\u10e0\u10e8\u10d8."),(0,r.kt)("p",null,"Anaconda \u10e1 \u10d8\u10dc\u10e1\u10e2\u10d0\u10da\u10d0\u10ea\u10d8\u10d8\u10e1 \u10e8\u10d4\u10db\u10d3\u10d2\u10dd\u10db \u10e8\u10d4\u10d2\u10d8\u10eb\u10da\u10d8\u10d0\u10d7 \u10d5\u10d8\u10dc\u10d3\u10dd\u10e3\u10e1\u10d8\u10e1 \u10e1\u10d0\u10eb\u10d8\u10d4\u10d1\u10dd\n\u10d5\u10d4\u10da\u10e8\u10d8 \u10e9\u10d0\u10ec\u10d4\u10e0\u10dd\u10d7 ",(0,r.kt)("strong",{parentName:"p"},"jupyter"),", \u10d3\u10d0\u10d0\u10d9\u10da\u10d8\u10d9\u10dd\u10d7 \u10d4\u10dc\u10d7\u10d4\u10e0\u10e1, \u10e0\u10d8\u10e1 \u10e8\u10d4\u10db\u10d3\u10d2\u10dd\u10db\u10d0\u10ea \u10d1\u10e0\u10d0\u10e3\u10d6\u10d4\u10e0\u10e8\u10d8\n\u10d2\u10d0\u10d8\u10ee\u10e1\u10dc\u10d4\u10d1\u10d0 \u10e4\u10d0\u10dc\u10ef\u10d0\u10e0\u10d0 \u10e0\u10dd\u10db\u10d4\u10da\u10e8\u10d8\u10ea \u10db\u10dd\u10ea\u10d4\u10db\u10e3\u10da\u10d8 \u10d8\u10e5\u10dc\u10d4\u10d1\u10d0 \u10d7\u10d5\u10e5\u10d4\u10dc\u10d8 \u10e4\u10d0\u10d8\u10da\u10e3\u10e0\u10d8 \u10e1\u10d8\u10e1\u10e2\u10d4\u10db\u10d0.\n\u10e8\u10d4\u10e1\u10d0\u10d1\u10d0\u10db\u10d8\u10e1\u10d8 \u10e4\u10dd\u10da\u10d3\u10d4\u10e0\u10d8\u10e1 \u10d0\u10e0\u10e9\u10d4\u10d5\u10d8\u10e1 \u10e8\u10d4\u10db\u10d3\u10d2\u10dd\u10db \u10d2\u10d0\u10ee\u10e1\u10dc\u10d8\u10d7 \u10d0\u10ee\u10d0\u10da \u10e1\u10d0\u10db\u10e3\u10e8\u10d0\u10dd \u10e4\u10d0\u10dc\u10ef\u10d0\u10e0\u10d0\u10e1."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"screenshot",src:t(79).Z,width:"1182",height:"347"})),(0,r.kt)("h3",{id:"\u10e4\u10dd\u10e2\u10dd\u10d4\u10d1\u10d8\u10e1-\u10d2\u10d0\u10d9\u10d5\u10d0\u10d3\u10e0\u10d0\u10e2\u10d4\u10d1\u10d0"},"\u10e4\u10dd\u10e2\u10dd\u10d4\u10d1\u10d8\u10e1 \u10d2\u10d0\u10d9\u10d5\u10d0\u10d3\u10e0\u10d0\u10e2\u10d4\u10d1\u10d0"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import os\nfrom tqdm.notebook import tqdm\nfrom PIL import Image\nimport os\nimport PIL\nimport glob\n\npath = \"imgs/750\"\ndirs = os.listdir( path )\n\ndef expand2square(pil_img, background_color):\n    width, height = pil_img.size\n    if width == height:\n        return pil_img\n    elif width > height:\n        result = Image.new(pil_img.mode, (width, width), background_color)\n        result.paste(pil_img, (0, (width - height) // 2))\n        return result\n    else:\n        result = Image.new(pil_img.mode, (height, height), background_color)\n        result.paste(pil_img, ((height - width) // 2, 0))\n        return result\n    \nfor item in tqdm(dirs):\n    if 'webp' in item:\n        continue\n    image = Image.open(path+'/'+item)\n     #new_im.save(, 'JPEG', quality=90)\n    im_new = expand2square(image, (255, 255, 255))\n    name = item.split('.')[0]\n    os.makedirs(f'imgs/square', exist_ok=True)\n    im_new.save(f'imgs/square/' + name+\".jpg\", \"JPEG\")\n")),(0,r.kt)("h3",{id:"\u10e1\u10d0\u10ee\u10d4\u10da\u10d4\u10d1\u10d8\u10e1-\u10d2\u10d0\u10d3\u10d0\u10e0\u10e5\u10db\u10d4\u10d5\u10d0"},"\u10e1\u10d0\u10ee\u10d4\u10da\u10d4\u10d1\u10d8\u10e1 \u10d2\u10d0\u10d3\u10d0\u10e0\u10e5\u10db\u10d4\u10d5\u10d0"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import os\nfrom tqdm.notebook import tqdm\nfrom PIL import Image\n\npath = \"main\"\ndirs = os.listdir( path )\nsizes = [250, 750, 2000]\n\ndef get_name(item):\n    name = item.split('.')[0]\n    if not '_' in name:\n        name = f\"{name}_1\"\n    else:\n        sort = int(name.split('_')[-1])\n        name = f\"{name}_{sort+1}\"\n       \n    name = f\"{name}.jpg\"\n    return name\n\ndef resize_aspect_fit():\n    \n    for size in sizes:\n        os.makedirs(f'imgs/{size}', exist_ok=True)\n\n        for item in tqdm(dirs):\n            if 'webp' in item:\n                continue\n            image = Image.open(path+'/'+item)\n            image.thumbnail((size, size), Image.ANTIALIAS)\n            image = image.convert(\"RGB\")\n            name = get_name(item)\n            image.save(f'imgs/{size}/' + name, \"JPEG\")\n             #new_im.save(, 'JPEG', quality=90)\n            \nresize_aspect_fit()\n\n\n/ *   IF PROBLEM WITH 0 Bytes\nImage files 0 byte \nfrom PIL import ImageFile\nImageFile.LOAD_TRUNCATED_IMAGES = True\n")),(0,r.kt)("h3",{id:"\u10da\u10d8\u10dc\u10d9\u10d4\u10d1\u10d8\u10d3\u10d0\u10dc-\u10d2\u10d0\u10d3\u10db\u10dd\u10ec\u10d4\u10e0\u10d0"},"\u10da\u10d8\u10dc\u10d9\u10d4\u10d1\u10d8\u10d3\u10d0\u10dc \u10d2\u10d0\u10d3\u10db\u10dd\u10ec\u10d4\u10e0\u10d0"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import pandas as pd\n\ndf = pd.read_excel('biblusi_import.xlsx', sheet_name='Sheet1')\n\nimport os\nimport requests\nfrom PIL import Image\nfrom tqdm.notebook import tqdm\n\nfor i, row in tqdm(df.iterrows(), total=len(df)):\n    name = row['code']\n    name = f\"{name}_1\"\n   \n    if os.path.exists(f'imgs/main/{name}.jpg'):\n        continue\n    path = row['link1']\n    try:\n        f = open(f'imgs/main/{name}.jpg','wb')\n        f.write(requests.get(path).content)\n        f.close()\n    except Exception as e:\n        print(f\"Invalid link: {path}\\n sku: {name}\")\n        print(e)\n")),(0,r.kt)("h3",{id:"\u10e4\u10dd\u10da\u10d3\u10d4\u10e0\u10d4\u10d1\u10d8\u10d3\u10d0\u10dc-\u10e4\u10dd\u10e2\u10dd\u10d4\u10d1\u10d8\u10e1-\u10d0\u10db\u10dd\u10e6\u10d4\u10d1\u10d0"},"\u10e4\u10dd\u10da\u10d3\u10d4\u10e0\u10d4\u10d1\u10d8\u10d3\u10d0\u10dc \u10e4\u10dd\u10e2\u10dd\u10d4\u10d1\u10d8\u10e1 \u10d0\u10db\u10dd\u10e6\u10d4\u10d1\u10d0"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import os\nimport glob\nfrom os import listdir\n\nrootdir = 'imgs/main'\nfor folder in os.listdir(rootdir):\n    d = os.path.join(rootdir, folder)\n    x = 0\n    tifCounter = len(glob.glob1(f'imgs/main/{folder}',\"*.jpg\"))\n    while x < tifCounter:\n        for file in os.listdir(f'imgs/main/{folder}'):\n            list = os.listdir(f'imgs/main/{folder}')\n            x += 1\n            print(file)\n            name = folder.replace(' ', '')\n            if \".jpg\" in file:\n                old_file_name = f'imgs/main/{folder}/{file}'\n                new_file_name = f'imgs/main2/{name}_{x}.jpg'\n                os.rename(old_file_name,new_file_name)\n        x += 1\n\n")),(0,r.kt)("h3",{id:"\u10e0\u10dd\u10ea\u10d0-\u10e4\u10dd\u10e2\u10dd\u10d4\u10d1\u10e1-\u10d0\u10e0-\u10d0\u10e5\u10d5\u10d7-\u10e1\u10dd\u10e0\u10e2\u10d8-_1"},"\u10e0\u10dd\u10ea\u10d0 \u10e4\u10dd\u10e2\u10dd\u10d4\u10d1\u10e1 \u10d0\u10e0 \u10d0\u10e5\u10d5\u10d7 \u10e1\u10dd\u10e0\u10e2\u10d8 _1"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import os\nfrom tqdm.notebook import tqdm\nfrom PIL import Image\n\npath = \"imgs/main\"\ndirs = os.listdir( path )\nsizes = [250, 750, 2000]\n\ndef get_name(item):\n    name = item.split('.')[0]\n    if not '_' in name:\n        name = f\"{name}_1\"\n    else:\n        sort = int(name.split('_')[-1])\n        name = name.split('_')[0]\n        name = f\"{name}_{sort+1}\"\n       \n    name = f\"{name}.jpg\"\n    return name\n\ndef resize_aspect_fit():\n    \n    for size in sizes:\n        os.makedirs(f'imgs/{size}', exist_ok=True)\n\n        for item in tqdm(dirs):\n            if 'webp' in item:\n                continue\n            image = Image.open(path+'/'+item)\n            image.thumbnail((size, size), Image.ANTIALIAS)\n            image = image.convert(\"RGB\")\n            item = item.replace('.JPG', '.jpg')\n            name = get_name(item)\n            image.save(f'imgs/{size}/' + name, \"JPEG\")\n             #new_im.save(, 'JPEG', quality=90)\n            \nresize_aspect_fit()\n")))}d.isMDXComponent=!0},79:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/kernel-dca18db55f7ecaec06939a3a917699de.png"}}]);